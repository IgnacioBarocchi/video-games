/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 assets/models/Tree/Tree.glb -t -r public
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    BARK_MESH: THREE.Mesh
    BARK_MESH_1: THREE.Mesh
    BARK_MESH_2: THREE.Mesh
    GRASS: THREE.Mesh
    LEAVES_MESH: THREE.Mesh
    LEAVES_MESH_1: THREE.Mesh
  }
  materials: {
    Tree_Mid: THREE.MeshBasicMaterial
    Tree_High: THREE.MeshBasicMaterial
    Tree_Dark: THREE.MeshBasicMaterial
    Grass: THREE.MeshBasicMaterial
    Tree_Leaves_Dark: THREE.MeshBasicMaterial
    Tree_Leaves_High: THREE.MeshBasicMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/../assets/models/Tree/Tree.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0, 1.03, 0]}>
        <mesh geometry={nodes.BARK_MESH.geometry} material={materials.Tree_Mid} />
        <mesh geometry={nodes.BARK_MESH_1.geometry} material={materials.Tree_High} />
        <mesh geometry={nodes.BARK_MESH_2.geometry} material={materials.Tree_Dark} />
      </group>
      <mesh geometry={nodes.GRASS.geometry} material={materials.Grass} position={[0.02, 2.9, 0]} rotation={[-Math.PI / 2, Math.PI / 2, 0]} scale={[30.16, 30.16, 14.84]} />
      <group position={[-7.09, 21.23, -0.97]} scale={[-2.81, -1.09, -2.81]}>
        <mesh geometry={nodes.LEAVES_MESH.geometry} material={materials.Tree_Leaves_Dark} />
        <mesh geometry={nodes.LEAVES_MESH_1.geometry} material={materials.Tree_Leaves_High} />
      </group>
    </group>
  )
}

useGLTF.preload('/../assets/models/Tree/Tree.glb')
