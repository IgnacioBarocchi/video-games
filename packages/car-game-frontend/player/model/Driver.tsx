/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 src/assets/models/Driver/Driver.gltf -t -r public
*/

import * as THREE from "three";
import React, { memo, useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import driverModelFile from "../../assets/models/Driver/Driver.gltf";

type GLTFResult = GLTF & {
  nodes: {
    Cube001: THREE.SkinnedMesh;
    Cube001_1: THREE.SkinnedMesh;
    Cube001_2: THREE.SkinnedMesh;
    Cube001_3: THREE.SkinnedMesh;
    Cube001_4: THREE.SkinnedMesh;
    Cube001_5: THREE.SkinnedMesh;
    Cube001_6: THREE.SkinnedMesh;
    Cube001_7: THREE.SkinnedMesh;
    Cube001_8: THREE.SkinnedMesh;
    Cube001_9: THREE.SkinnedMesh;
    Cube001_10: THREE.SkinnedMesh;
    mixamorigHips: THREE.Bone;
  };
  materials: {
    Jacket_Dark: THREE.MeshBasicMaterial;
    ["Jacket_Base.001"]: THREE.MeshBasicMaterial;
    ["Skin.001"]: THREE.MeshBasicMaterial;
    ["Jacket_zipper.001"]: THREE.MeshBasicMaterial;
    ["Jean_Base.001"]: THREE.MeshBasicMaterial;
    ["Boots_base.001"]: THREE.MeshBasicMaterial;
    ["Hair.001"]: THREE.MeshBasicMaterial;
    ["Boots_Details.001"]: THREE.MeshBasicMaterial;
    Jacket_Shade_V2: THREE.MeshBasicMaterial;
    Skin_Shade: THREE.MeshBasicMaterial;
  };
};

type ActionName = "Driving" | "Idle";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export const DriverModel = //memo<{ carDrivingState: string }>(
  ({ carDrivingState }) => {
    const group = useRef<THREE.Group>();
    const { nodes, materials, animations } = useGLTF(
      driverModelFile
    ) as GLTFResult;
    const { actions } = useAnimations<GLTFActions>(animations, group);

    useEffect(() => {
      if (carDrivingState === "STOP") {
        actions.Driving.reset().crossFadeTo(actions.Idle, 0.2).stop();
        actions.Idle.reset().reset().fadeIn(0.2).play();
      } else {
        actions.Idle.reset().crossFadeTo(actions.Driving, 0.2).stop();
        actions.Driving.reset().reset().fadeIn(0.2).play();
      }
    }, [carDrivingState]);

    return (
      <group ref={group} dispose={null}>
        <group name="Scene">
          <group
            name="Armature"
            position={[0.61, 0.26, 1]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.01}
          >
            <primitive object={nodes.mixamorigHips} />
            <group name="Driver">
              <skinnedMesh
                name="Cube001"
                geometry={nodes.Cube001.geometry}
                material={materials.Jacket_Dark}
                skeleton={nodes.Cube001.skeleton}
              />
              <skinnedMesh
                name="Cube001_1"
                geometry={nodes.Cube001_1.geometry}
                material={materials["Jacket_Base.001"]}
                skeleton={nodes.Cube001_1.skeleton}
              />
              <skinnedMesh
                name="Cube001_2"
                geometry={nodes.Cube001_2.geometry}
                material={materials["Skin.001"]}
                skeleton={nodes.Cube001_2.skeleton}
              />
              <skinnedMesh
                name="Cube001_3"
                geometry={nodes.Cube001_3.geometry}
                material={materials["Jacket_zipper.001"]}
                skeleton={nodes.Cube001_3.skeleton}
              />
              <skinnedMesh
                name="Cube001_4"
                geometry={nodes.Cube001_4.geometry}
                material={materials["Jacket_zipper.001"]}
                skeleton={nodes.Cube001_4.skeleton}
              />
              <skinnedMesh
                name="Cube001_5"
                geometry={nodes.Cube001_5.geometry}
                material={materials["Jean_Base.001"]}
                skeleton={nodes.Cube001_5.skeleton}
              />
              <skinnedMesh
                name="Cube001_6"
                geometry={nodes.Cube001_6.geometry}
                material={materials["Boots_base.001"]}
                skeleton={nodes.Cube001_6.skeleton}
              />
              <skinnedMesh
                name="Cube001_7"
                geometry={nodes.Cube001_7.geometry}
                material={materials["Hair.001"]}
                skeleton={nodes.Cube001_7.skeleton}
              />
              <skinnedMesh
                name="Cube001_8"
                geometry={nodes.Cube001_8.geometry}
                material={materials["Boots_Details.001"]}
                skeleton={nodes.Cube001_8.skeleton}
              />
              <skinnedMesh
                name="Cube001_9"
                geometry={nodes.Cube001_9.geometry}
                material={materials.Jacket_Shade_V2}
                skeleton={nodes.Cube001_9.skeleton}
              />
              <skinnedMesh
                name="Cube001_10"
                geometry={nodes.Cube001_10.geometry}
                material={materials.Skin_Shade}
                skeleton={nodes.Cube001_10.skeleton}
              />
            </group>
          </group>
        </group>
      </group>
    );
  }; //,
// );

useGLTF.preload(driverModelFile);
