/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 assets/models/Zombie_Male_Low_Res_Mini.glb -t -r public
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ZOMBIE_MESH004: THREE.SkinnedMesh
    ZOMBIE_MESH004_1: THREE.SkinnedMesh
    ZOMBIE_MESH004_2: THREE.SkinnedMesh
    ZOMBIE_MESH004_3: THREE.SkinnedMesh
    ZOMBIE_MESH004_4: THREE.SkinnedMesh
    ZOMBIE_MESH004_5: THREE.SkinnedMesh
    ZOMBIE_MESH004_6: THREE.SkinnedMesh
    mixamorigHips: THREE.Bone
  }
  materials: {
    Zombie_base: THREE.MeshBasicMaterial
    Zombie_2: THREE.MeshBasicMaterial
    Zombie_3: THREE.MeshBasicMaterial
    Zombie_shade_4: THREE.MeshBasicMaterial
    Socket: THREE.MeshBasicMaterial
    Blood: THREE.MeshBasicMaterial
  }
}

type ActionName = 'ATTACK' | 'BITE' | 'DEATH' | 'HEAD_HIT' | 'RUN' | 'SHOT' | 'SSCREAM'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/../assets/models/Zombie_Male_Low_Res_Mini.glb') as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <group name="ZOMBIE">
            <skinnedMesh name="ZOMBIE_MESH004" geometry={nodes.ZOMBIE_MESH004.geometry} material={materials.Zombie_base} skeleton={nodes.ZOMBIE_MESH004.skeleton} />
            <skinnedMesh name="ZOMBIE_MESH004_1" geometry={nodes.ZOMBIE_MESH004_1.geometry} material={materials.Zombie_2} skeleton={nodes.ZOMBIE_MESH004_1.skeleton} />
            <skinnedMesh name="ZOMBIE_MESH004_2" geometry={nodes.ZOMBIE_MESH004_2.geometry} material={materials.Zombie_3} skeleton={nodes.ZOMBIE_MESH004_2.skeleton} />
            <skinnedMesh name="ZOMBIE_MESH004_3" geometry={nodes.ZOMBIE_MESH004_3.geometry} material={materials.Zombie_shade_4} skeleton={nodes.ZOMBIE_MESH004_3.skeleton} />
            <skinnedMesh name="ZOMBIE_MESH004_4" geometry={nodes.ZOMBIE_MESH004_4.geometry} material={materials.Socket} skeleton={nodes.ZOMBIE_MESH004_4.skeleton} />
            <skinnedMesh name="ZOMBIE_MESH004_5" geometry={nodes.ZOMBIE_MESH004_5.geometry} material={materials.Blood} skeleton={nodes.ZOMBIE_MESH004_5.skeleton} />
            <skinnedMesh name="ZOMBIE_MESH004_6" geometry={nodes.ZOMBIE_MESH004_6.geometry} material={nodes.ZOMBIE_MESH004_6.material} skeleton={nodes.ZOMBIE_MESH004_6.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/../assets/models/Zombie_Male_Low_Res_Mini.glb')
