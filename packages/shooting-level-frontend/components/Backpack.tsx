/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 assets/models/Backpack.glb -t -r public
*/

import * as THREE from "three";
import React, { useState } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import backpack3DModelFile from "./../assets/models/Backpack.glb";
import { RigidBody } from "@react-three/rapier";
import useGameStore from "../store/store";

type GLTFResult = GLTF & {
  nodes: {
    Cube_1: THREE.Mesh;
    Cube_2: THREE.Mesh;
    Cube_3: THREE.Mesh;
    Cube_4: THREE.Mesh;
    Cube_5: THREE.Mesh;
  };
  materials: {
    Backpack_Base: THREE.MeshBasicMaterial;
    Backpack_Stripes: THREE.MeshBasicMaterial;
    Backpack_Details: THREE.MeshBasicMaterial;
    Backpack_Shade: THREE.MeshBasicMaterial;
    Backpack_High: THREE.MeshBasicMaterial;
  };
};

export const Backpack = ({ position }) => {
  const { nodes, materials } = useGLTF(backpack3DModelFile) as GLTFResult;
  const setPlayerPickedBackpack = useGameStore(
    (state) => state.setPlayerPickedBackpack
  );

  const [displayBackPack, setDisplayBackpack] = useState(true);

  if (displayBackPack) {
    return (
      <RigidBody
        position={position}
        onCollisionEnter={(payload) => {
          if (payload.other.rigidBodyObject.name === "Player") {
            setPlayerPickedBackpack();
            setDisplayBackpack(false);
          }
        }}
      >
        <group dispose={null}>
          <group position={[0, 0.25, 0]} scale={0.2}>
            <mesh
              geometry={nodes.Cube_1.geometry}
              material={materials.Backpack_Base}
            />
            <mesh
              geometry={nodes.Cube_2.geometry}
              material={materials.Backpack_Stripes}
            />
            <mesh
              geometry={nodes.Cube_3.geometry}
              material={materials.Backpack_Details}
            />
            <mesh
              geometry={nodes.Cube_4.geometry}
              material={materials.Backpack_Shade}
            />
            <mesh
              geometry={nodes.Cube_5.geometry}
              material={materials.Backpack_High}
            />
          </group>
        </group>
      </RigidBody>
    );
  }

  return null;
};

useGLTF.preload(backpack3DModelFile);
