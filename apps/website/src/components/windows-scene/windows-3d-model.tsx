/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 src/assets/models/windows/Windows.glb -t -r public
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import windows3DModel from "../../assets/models/windows/Windows.glb";
import { useTurnTable } from "../../hooks/use-turn-table";

type GLTFResult = GLTF & {
  nodes: {
    WINDOWS_MESH: THREE.Mesh;
    WINDOWS_MESH_1: THREE.Mesh;
  };
  materials: {
    Wood: THREE.MeshBasicMaterial;
    Glass: THREE.MeshBasicMaterial;
  };
};

export function Windows3DModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(windows3DModel) as GLTFResult;
  const { group } = useTurnTable();

  return (
    <group {...props} dispose={null} ref={group}>
      <group scale={[0.47, 0.47, 0.02]}>
        <mesh
          geometry={nodes.WINDOWS_MESH.geometry}
          material={materials.Wood}
        />
        <mesh
          geometry={nodes.WINDOWS_MESH_1.geometry}
          material={materials.Glass}
        />
      </group>
    </group>
  );
}

useGLTF.preload(windows3DModel);
