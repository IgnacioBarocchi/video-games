/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 src/assets/models/archive/Box.glb -t -r public
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import box3DFile from "../../assets/models/archive/Box.glb";
import { useTurnTable } from "../../hooks/use-turn-table";

type GLTFResult = GLTF & {
  nodes: {
    BOX_MESH: THREE.Mesh;
    BOX_MESH_1: THREE.Mesh;
    BOX_MESH_2: THREE.Mesh;
    BOX_MESH_3: THREE.Mesh;
  };
  materials: {
    Box: THREE.MeshBasicMaterial;
    Tape: THREE.MeshBasicMaterial;
    Box_shade: THREE.MeshBasicMaterial;
    Box_high: THREE.MeshBasicMaterial;
  };
};

export function Box3DModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(box3DFile) as GLTFResult;
  const { group } = useTurnTable();

  return (
    <group {...props} dispose={null} ref={group} scale={0.7}>
      <group position={[0, 0.5, 0]}>
        <mesh geometry={nodes.BOX_MESH.geometry} material={materials.Box} />
        <mesh geometry={nodes.BOX_MESH_1.geometry} material={materials.Tape} />
        <mesh
          geometry={nodes.BOX_MESH_2.geometry}
          material={materials.Box_shade}
        />
        <mesh
          geometry={nodes.BOX_MESH_3.geometry}
          material={materials.Box_high}
        />
      </group>
    </group>
  );
}

useGLTF.preload(box3DFile);
