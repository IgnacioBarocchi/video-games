/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 src/assets/models/windows/Windows.glb -t -r public
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    WINDOWS_MESH: THREE.Mesh
    WINDOWS_MESH_1: THREE.Mesh
  }
  materials: {
    Wood: THREE.MeshBasicMaterial
    Glass: THREE.MeshBasicMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/../src/assets/models/windows/Windows.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0, 0, 0.01]} scale={[0.57, 0.57, 0.03]}>
        <mesh geometry={nodes.WINDOWS_MESH.geometry} material={materials.Wood} />
        <mesh geometry={nodes.WINDOWS_MESH_1.geometry} material={materials.Glass} />
      </group>
    </group>
  )
}

useGLTF.preload('/../src/assets/models/windows/Windows.glb')
